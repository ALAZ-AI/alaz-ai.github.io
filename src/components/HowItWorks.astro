<section id="how-it-works" class="section-padding bg-gradient-to-b from-gray-800 to-gray-900 relative overflow-hidden">
    <!-- Background Effects -->
    <div class="absolute inset-0">
        <div class="absolute top-10 left-1/4 w-72 h-72 bg-cyan-500/3 blur-3xl animate-pulse"></div>
        <div class="absolute bottom-10 right-1/4 w-96 h-96 bg-purple-500/3 blur-3xl animate-pulse" style="animation-delay: 3s;"></div>
    </div>

    <div class="container mx-auto relative z-10">
        <!-- Section Header -->
        <div class="text-center mb-20 fade-in-up">
            <h2 class="text-4xl md:text-5xl font-black text-white mb-6">
                Effortless Security, <span class="text-gradient">Powered by AI</span>
            </h2>
            <p class="text-lg md:text-xl text-gray-400 max-w-4xl mx-auto leading-relaxed">
                Watch how ALAZ's four intelligent components work together to protect your network in real-time
            </p>
        </div>

        <!-- Architecture Diagram -->
        <div class="mb-20 fade-in-up">
            <div class="angular-card p-6 lg:p-8">
                <div class="grid lg:grid-cols-4 gap-6 lg:gap-8">
                    <!-- SENTRY -->
                    <div class="text-center group">
                        <div class="w-16 h-16 mx-auto mb-4 bg-gradient-to-r from-blue-500 to-cyan-500 flex items-center justify-center neon-blue group-hover:scale-105 transition-transform duration-300">
                            <svg class="w-8 h-8 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z"></path>
                            </svg>
                        </div>
                        <h3 class="text-lg font-bold text-white mb-2">SENTRY</h3>
                        <p class="text-sm text-gray-400 mb-2">DNS Engine</p>
                        <div class="text-xs text-cyan-400 font-mono">&lt;1ms response</div>
                    </div>

                    <!-- CODEX -->
                    <div class="text-center group">
                        <div class="w-16 h-16 mx-auto mb-4 bg-gradient-to-r from-purple-500 to-pink-500 flex items-center justify-center neon-purple group-hover:scale-105 transition-transform duration-300">
                            <svg class="w-8 h-8 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 7v10c0 2.21 3.582 4 8 4s8-1.79 8-4V7M4 7c0 2.21 3.582 4 8 4s8-1.79 8-4M4 7c0-2.21 3.582-4 8-4s8 1.79 8 4"></path>
                            </svg>
                        </div>
                        <h3 class="text-lg font-bold text-white mb-2">CODEX</h3>
                        <p class="text-sm text-gray-400 mb-2">Data Layer</p>
                        <div class="text-xs text-purple-400 font-mono">50M+ domains</div>
                    </div>

                    <!-- ORACLE -->
                    <div class="text-center group">
                        <div class="w-16 h-16 mx-auto mb-4 bg-gradient-to-r from-green-500 to-emerald-500 flex items-center justify-center neon-green group-hover:scale-105 transition-transform duration-300">
                            <svg class="w-8 h-8 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.75 17L9 20l-1 1h8l-1-1-.75-3M3 13h18M5 17h14a2 2 0 002-2V5a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"></path>
                            </svg>
                        </div>
                        <h3 class="text-lg font-bold text-white mb-2">ORACLE</h3>
                        <p class="text-sm text-gray-400 mb-2">AI Engine</p>
                        <div class="text-xs text-green-400 font-mono">99.8% accuracy</div>
                    </div>

                    <!-- PANEL -->
                    <div class="text-center group">
                        <div class="w-16 h-16 mx-auto mb-4 bg-gradient-to-r from-orange-500 to-red-500 flex items-center justify-center neon-orange group-hover:scale-105 transition-transform duration-300">
                            <svg class="w-8 h-8 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"></path>
                            </svg>
                        </div>
                        <h3 class="text-lg font-bold text-white mb-2">PANEL</h3>
                        <p class="text-sm text-gray-400 mb-2">Dashboard</p>
                        <div class="text-xs text-orange-400 font-mono">Real-time</div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Process Flow -->
        <div class="grid lg:grid-cols-2 gap-12 items-center">
            <!-- Visual Flow Diagram -->
            <div class="fade-in-up">
                <div class="relative">
                    <!-- Animated Connection Lines -->
                    <svg class="absolute inset-0 w-full h-full" style="z-index: 1;">
                        <defs>
                            <linearGradient id="flowGradient" x1="0%" y1="0%" x2="100%" y2="100%">
                                <stop offset="0%" style="stop-color:#2563EB;stop-opacity:0.6" />
                                <stop offset="100%" style="stop-color:#7C3AED;stop-opacity:0.6" />
                            </linearGradient>
                        </defs>
                        <path class="flow-line" d="M 80 100 Q 200 50 320 100" stroke="url(#flowGradient)" stroke-width="2" fill="none" opacity="0.5"/>
                        <path class="flow-line" d="M 80 200 Q 200 150 320 200" stroke="url(#flowGradient)" stroke-width="2" fill="none" opacity="0.5" style="animation-delay: 0.5s;"/>
                        <path class="flow-line" d="M 80 300 Q 200 250 320 300" stroke="url(#flowGradient)" stroke-width="2" fill="none" opacity="0.5" style="animation-delay: 1s;"/>
                    </svg>
                    
                    <!-- Flow Steps -->
                    <div class="relative space-y-8" style="z-index: 2;">
                        <!-- Step 1: DNS Request -->
                        <div class="flex items-center space-x-4 flow-step">
                            <div class="w-14 h-14 bg-gradient-to-r from-blue-500 to-cyan-500 flex items-center justify-center neon-blue">
                                <svg class="w-7 h-7 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 19l9 2-9-18-9 18 9-2zm0 0v-8"></path>
                                </svg>
                            </div>
                            <div class="flex-1">
                                <h4 class="text-lg font-bold text-white mb-1">DNS Request Received</h4>
                                <p class="text-gray-400 text-sm">Your device sends a domain request to ALAZ instead of your ISP</p>
                                <div class="mt-2 text-xs text-cyan-400 font-mono">example.com â†’ ALAZ</div>
                            </div>
                        </div>

                        <!-- Step 2: Analysis -->
                        <div class="flex items-center space-x-4 flow-step" style="animation-delay: 0.5s;">
                            <div class="w-14 h-14 bg-gradient-to-r from-purple-500 to-pink-500 flex items-center justify-center neon-purple">
                                <svg class="w-7 h-7 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v6a2 2 0 002 2h2m0 0h2m-2 0v4a2 2 0 002 2h2m0 0h2m-2 0v-4a2 2 0 012-2h2a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5V3a2 2 0 012-2h2a2 2 0 012 2v2"></path>
                                </svg>
                            </div>
                            <div class="flex-1">
                                <h4 class="text-lg font-bold text-white mb-1">Intelligent Analysis</h4>
                                <p class="text-gray-400 text-sm">SENTRY checks policies and CODEX threat intelligence database</p>
                                <div class="mt-2 text-xs text-purple-400 font-mono">Policy Check + AI Analysis</div>
                            </div>
                        </div>

                        <!-- Step 3: Decision -->
                        <div class="flex items-center space-x-4 flow-step" style="animation-delay: 1s;">
                            <div class="w-14 h-14 bg-gradient-to-r from-green-500 to-emerald-500 flex items-center justify-center neon-green">
                                <svg class="w-7 h-7 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                                </svg>
                            </div>
                            <div class="flex-1">
                                <h4 class="text-lg font-bold text-white mb-1">Smart Decision</h4>
                                <p class="text-gray-400 text-sm">Allow safe domains, block threats, queue unknowns for ORACLE</p>
                                <div class="mt-2 text-xs text-green-400 font-mono">âœ“ Allow | âœ— Block | ? Analyze</div>
                            </div>
                        </div>

                        <!-- Step 4: Learning -->
                        <div class="flex items-center space-x-4 flow-step" style="animation-delay: 1.5s;">
                            <div class="w-14 h-14 bg-gradient-to-r from-orange-500 to-red-500 flex items-center justify-center neon-orange">
                                <svg class="w-7 h-7 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"></path>
                                </svg>
                            </div>
                            <div class="flex-1">
                                <h4 class="text-lg font-bold text-white mb-1">Continuous Learning</h4>
                                <p class="text-gray-400 text-sm">ORACLE analysis improves network-wide intelligence</p>
                                <div class="mt-2 text-xs text-orange-400 font-mono">ML Training Loop</div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Real-time Stats Dashboard -->
            <div class="fade-in-up" style="animation-delay: 0.3s;">
                <div class="angular-card p-6 lg:p-8">
                    <h3 class="text-xl lg:text-2xl font-bold text-white mb-6 text-center">Live Network Protection</h3>
                    
                    <!-- Real-time counters -->
                    <div class="grid grid-cols-2 gap-4 mb-8">
                        <div class="bg-gradient-to-r from-green-500/10 to-emerald-500/10 p-4 text-center">
                            <div class="text-xl lg:text-2xl font-black text-green-400 mb-1 counter" data-target="1847">0</div>
                            <div class="text-sm text-gray-400">Requests Today</div>
                        </div>
                        <div class="bg-gradient-to-r from-red-500/10 to-orange-500/10 p-4 text-center">
                            <div class="text-xl lg:text-2xl font-black text-red-400 mb-1 counter" data-target="23">0</div>
                            <div class="text-sm text-gray-400">Threats Blocked</div>
                        </div>
                    </div>

                    <!-- Activity Feed -->
                    <div class="space-y-3">
                        <div class="text-sm font-semibold text-white mb-4">Recent Activity</div>
                        <div class="activity-item flex items-center space-x-3 p-3 bg-green-500/10">
                            <div class="status-indicator mr-2"></div>
                            <div class="flex-1">
                                <div class="text-sm text-white">google.com</div>
                                <div class="text-xs text-gray-400">Allowed â€¢ 0.8ms</div>
                            </div>
                            <div class="text-xs text-green-400">âœ“</div>
                        </div>
                        <div class="activity-item flex items-center space-x-3 p-3 bg-red-500/10">
                            <div class="status-indicator error mr-2"></div>
                            <div class="flex-1">
                                <div class="text-sm text-white">malware-site.evil</div>
                                <div class="text-xs text-gray-400">Blocked â€¢ 0.3ms</div>
                            </div>
                            <div class="text-xs text-red-400">âœ—</div>
                        </div>
                        <div class="activity-item flex items-center space-x-3 p-3 bg-blue-500/10">
                            <div class="status-indicator info mr-2"></div>
                            <div class="flex-1">
                                <div class="text-sm text-white">unknown-domain.com</div>
                                <div class="text-xs text-gray-400">Analyzing â€¢ AI Queue</div>
                            </div>
                            <div class="text-xs text-blue-400">?</div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<script>
    // Animate flow lines
    function animateFlowLines() {
        const style = document.createElement('style');
        style.textContent = `
            .flow-line {
                stroke-dasharray: 8 4;
                animation: flowAnimation 4s linear infinite;
            }
            @keyframes flowAnimation {
                to { stroke-dashoffset: -12; }
            }
            .flow-step {
                opacity: 0;
                transform: translateX(-20px);
                animation: slideInFlow 0.8s ease forwards;
            }
            @keyframes slideInFlow {
                to {
                    opacity: 1;
                    transform: translateX(0);
                }
            }
        `;
        document.head.appendChild(style);
    }

    // Animate counters
    function animateCounters() {
        const counters = document.querySelectorAll('.counter');
        
        const observer = new IntersectionObserver((entries) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    const counter = entry.target as HTMLElement;
                    const target = parseInt(counter.dataset.target || '0');
                    let current = 0;
                    const increment = target / 60; // 1 second animation at 60fps
                    
                    const updateCounter = () => {
                        current += increment;
                        if (current < target) {
                            counter.textContent = Math.ceil(current).toString();
                            requestAnimationFrame(updateCounter);
                        } else {
                            counter.textContent = target.toString();
                        }
                    };
                    
                    updateCounter();
                    observer.unobserve(counter);
                }
            });
        }, { threshold: 0.5 });
        
        counters.forEach(counter => observer.observe(counter));
    }

    // Simulate activity feed updates
    function simulateActivity() {
        const activities = [
            { domain: 'facebook.com', status: 'allowed', time: '0.7ms', color: 'green' },
            { domain: 'phishing-site.malware', status: 'blocked', time: '0.2ms', color: 'red' },
            { domain: 'new-domain.org', status: 'analyzing', time: 'AI Queue', color: 'blue' },
            { domain: 'youtube.com', status: 'allowed', time: '0.9ms', color: 'green' },
            { domain: 'ad-tracker.com', status: 'blocked', time: '0.1ms', color: 'red' }
        ];
        
        const activityContainer = document.querySelector('.space-y-3');
        if (!activityContainer) return;
        
        setInterval(() => {
            const activity = activities[Math.floor(Math.random() * activities.length)];
            const activityItems = activityContainer.querySelectorAll('.activity-item');
            
            if (activityItems.length > 0) {
                const lastItem = activityItems[activityItems.length - 1] as HTMLElement;
                lastItem.style.opacity = '0.6';
                lastItem.style.transform = 'scale(0.98)';
            }
        }, 4000);
    }

    document.addEventListener('DOMContentLoaded', () => {
        animateFlowLines();
        animateCounters();
        simulateActivity();
    });
</script>

<style>
    .activity-item {
        transition: all 0.3s ease;
        border-radius: 4px;
    }
    
    .activity-item:hover {
        transform: scale(1.02);
        background-opacity: 0.15;
    }
</style>